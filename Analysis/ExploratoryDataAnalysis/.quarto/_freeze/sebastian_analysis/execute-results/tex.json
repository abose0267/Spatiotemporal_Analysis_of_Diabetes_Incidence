{
  "hash": "5c15fc25e17f6cef75f9a60f7237763e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring Data Analysis\"\nauthor: \"Sebastian Oberg\"\nformat: pdf\n---\n\n\n## -   Check for correlation between your variables. - Dataset 1, Walkability Index\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.92 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\n# Correct the file path to match the actual location of your CSV file\nfile_path <- \"../../Data/data.csv\"\n\n# Check if the file exists before attempting to read it\nif (!file.exists(file_path)) {\n  stop(\"The file does not exist in the specifieddirectory.\")\n}\n\n# Read data\nEPA_SmartLocationDatabase <- read_csv(file_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 220740 Columns: 117\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr   (2): CSA_Name, CBSA_Name\ndbl (115): OBJECTID, GEOID10, GEOID20, STATEFP, COUNTYFP, TRACTCE, BLKGRPCE,...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Select fewer columns of interest based on your domain knowledge or other criteria\nselected_columns <- EPA_SmartLocationDatabase %>%\n  select(TotPop, CountHU, HH, Workers, AutoOwn2p,\n         R_HiWageWk, TotEmp, D2A_JPHH,\n         D2C_TRPMX1, NatWalkInd, D3B_Ranked) # Adjusted the number of variables\n\n# Convert selected columns to a numeric matrix, if not already\nnumeric_data <- data.matrix(selected_columns)\n\n# Ensure all selected data is numeric and finite\nnumeric_data <- ifelse(!is.finite(numeric_data), NA, numeric_data)\n\n# Compute correlation matrix for selected numeric variables\ncor_matrix <- cor(numeric_data, use = \"pairwise.complete.obs\")\n\n# Increase the size of the plot to make it more readable\npng(filename = \"correlation_matrix.png\", width = 10, height = 10, units = 'in', res = 300)\npar(mar = c(5, 5, 5, 5)) # Increase margin size if variable names are cut off\n\n# Visualize the correlation matrix\ncorrplot(\n  cor_matrix,\n  method = 'color', # Use color to represent correlation\n  type = 'upper', # Show only the upper half of the matrix\n  order = 'hclust', # Hierarchical clustering order\n  tl.cex = 1.2, # Increase text size for variable names\n  number.cex = 1.2, # Increase text size for correlation coefficients\n  number.digits = 2, # Reduce the number of digits to enhance readability\n  addCoef.col = 'black', # Color of the correlation coefficients\n  tl.col = 'black', # Color of text labels\n  tl.srt = 45, # Rotation of text labels\n  diag = FALSE # Remove the diagonal\n)\n\ndev.off() # Close the plotting device\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npdf \n  2 \n```\n\n\n:::\n:::\n\n\n![](correlation_matrix.png)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}