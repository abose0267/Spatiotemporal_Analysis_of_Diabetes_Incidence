---
title: "The Impact of Walkability on Diabetes Prevelance in the Southern United States"
format:
  arxiv-pdf:
    keep-tex: true  
    linenumbers: false
    doublespacing: false
    runninghead: "A Preprint"
  arxiv-html: default
author:
  - name: Arkaprabho Bose
    affiliations:
      - name: Texas A & M University
        department: Undergraduate Program in Department of Computer Science
        address: 400 Bizzell Street
        city: College Station, TX
        country: USA
        postal-code: 77843
    orcid: 0000-0003-2402-304X
    email: abose0267@tamu.edu
    url: https://mm218.dev
  - name: Sebastian Oberg
    affiliations:
      - name: Texas A & M University
        department: Undergraduate Program in Department of Computer Science
        address: 400 Bizzell Street
        city: College Station, TX
        country: USA
        postal-code: 77843
  - name: Abhinav Cheruvu
    affiliations:
      - name: Texas A & M University
        department: Undergraduate Program in Department of Mathematics
        address: 400 Bizzell Street
        city: College Station, TX
        country: USA
        postal-code: 77843
abstract: |
  This document is only a demo explaining how to use the template.
keywords: 
  - template
  - demo
---

# Introduction {#sec-intro}

This is an example of how to use this template to render journal articles. This template is inspired by the arXiv rticles template for rmarkdown, repurposed for the Quarto publishing system.

This quarto extension format supports PDF and HTML outputs. This template is primarily focused on generating acceptable {{< latex >}} outputs from Quarto, but renders an acceptable HTML output using the standard Quarto options.

# Related Works


# Methods


# Results 

```{r echo={FALSE}}
source("./Functions/DataProcessing.R")

library(GWmodel)
library(dplyr)
library(ggplot2)
library(sf)
library(corrplot)
```

```{r echo={FALSE}}
loadedData <- loadData()
```

```{r echo={FALSE}}
cleaned_walkability = loadedData$original_walkability %>% clean_walkability()
cleaned_diabetes = loadedData$original_diabetes %>% clean_diabetes()
spatial_data = loadedData$spatial_data %>% clean_spatial()
new_dataset = merge(cleaned_walkability, cleaned_diabetes, by = "CountyFIPS", all.x = TRUE, all.y = TRUE) %>% subset( !(StateAbbr %in% c("AK", "HI"))) 
new_spatial_dataset = merge(new_dataset,spatial_data, by = "CountyFIPS", all.x = TRUE, all.y = TRUE)
```
```{r echo={FALSE}}
plot_correlation_matrix(new_dataset)
```

```{r echo={FALSE}}
new_spatial_dataset <- na.omit(new_spatial_dataset)
sf_spatial_data<- st_as_sf(new_spatial_dataset)
sf_spatial_data <- as(sf_spatial_data, "Spatial")
```

<!-- ```{r} -->
<!-- rf_pred <- runRandomForest(sf_spatial_data) -->
<!-- ``` -->

```{r echo={FALSE}}
ggplot() +
  geom_sf(data = new_spatial_dataset, aes(geometry = geometry,fill =DIABETES_CrudePrev), color="black",size=0.2) +
  scale_fill_viridis_c(name = "Diabetes Crude Prev") +
  labs(title = "Spatial Distribution of Diabetes Crude Prevalence")
```

```{r echo={FALSE}}
gwr_model_results = fit_gwr(sf_spatial_data)
model_df <- gwr_model_results$SDF %>% as("sf")
```

```{r echo={FALSE}}
  ggplot() +
    geom_sf(data = model_df, aes(geometry = geometry,fill = yhat), color="black",size=0.2) +
    scale_fill_viridis_c(name = "Diabetes Crude Prev") +
    labs(title = "Fitted Spatial Distribution of Diabetes Crude Prevalence")

  ggplot() +
    geom_sf(data = model_df, aes(geometry = geometry,fill = y), color="black",size=0.2) +
    scale_fill_viridis_c(name = "Diabetes Crude Prev") +
    labs(title = "Spatial Distribution of Diabetes Crude Prevalence")
```

```{r echo={FALSE}}
model_df %>%
 mutate("Predicted %Diabetes Prevalence" = yhat) %>%
  ggplot() +
  geom_sf(aes(fill = `Predicted %Diabetes Prevalence`),
          color = scales::alpha("black",
                                alpha = 0.1)) +
  scale_fill_gradientn(colours = terrain.colors(8),
                       limits = c(0, 25),
                       breaks = c(0, 10, 20)) +
  theme(text = element_text(size = 20),
        legend.position = "bottom") +
  labs(title = "Predicted Values for %Diabetes Prevalence by GWR w/ exponential kernel")
```

```{r echo={FALSE}}
model_df %>%
  mutate("%Diabetes Abs Err" = abs(yhat - y)) %>%
  ggplot() +
  geom_sf(aes(fill = `%Diabetes Abs Err`),
          color = scales::alpha("black",
                                alpha = 0.1)) +
  scale_fill_viridis_c(limits = c(0, 1),
                       breaks = c(0, 0.5, 1)) +
  theme(text = element_text(size = 20),
        legend.position = "bottom") +
  labs(title = "Absolute Prediction Error of %Diabetes by GWR w/ \nexponential kernel")
```

```{r echo={FALSE}}
model_df %>%
  mutate("NatWalkInd Coeff" = NatWalkInd) %>%
  ggplot() +
  geom_sf(aes(fill = `NatWalkInd Coeff`),color="black",size=0.2) +
 scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title =
"Estimated Coefficient Surface of NatWalkInd")
```


```{r echo={FALSE}}
plots = data.frame(CountyFIPS = new_spatial_dataset$CountyFIPS,Walkability_Obs = new_spatial_dataset$NatWalkInd,HBP_Obs = new_spatial_dataset$BPHIGH_CrudePrev,walkability_coef= model_df$NatWalkInd, walk_impact = new_spatial_dataset$NatWalkInd * model_df$NatWalkInd, INTPTLAT=new_spatial_dataset$INTPTLAT, INTPTLON = new_spatial_dataset$INTPTLON, geometry =  new_spatial_dataset$geometry  ) %>%
  st_sf()

plots %>%
  ggplot() +
  geom_sf(aes(fill = walk_impact),color="black",size=0.2) +
 scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title =
"Estimated Impact of NatWalkInd")

# example_long = model_df %>%
#   select(!c(Intercept), !contains("_TV"), !contains("_SE")) %>%
#   rename_with(~paste0(.x, "_coef")) %>%
#   bind_cols(new_spatial_dataset) 
#   pivot_longer(data = NatWalkInd:CSMOKING_CrudePrev,
#                names_to = "Covariate",
#                values_to = "Coefficient")
```



```{r echo={FALSE}}
model_df %>%
  mutate("%HBP Prevalence Coeff" = BPHIGH_CrudePrev) %>%
  ggplot() +
  geom_sf(aes(fill = `%HBP Prevalence Coeff`),color="black",size=0.2) +
 scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title =
"Estimated Coefficient Surface of HBP")
```

```{r echo={FALSE}}
model_df %>%
  mutate("%Obesity Prevalence Coeff" = OBESITY_CrudePrev) %>%
  ggplot() +
  geom_sf(aes(fill = `%Obesity Prevalence Coeff`),color="black",size=0.2) +
 scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = mean(model_df$OBESITY_CrudePrev)) +
  labs(title =
"Estimated Coefficient Surface of Obesity")
```

```{r echo={FALSE}}
model_df %>%
  mutate("%Smoker Prevalence Coeff" = CSMOKING_CrudePrev) %>%
  ggplot() +
  geom_sf(aes(fill = `%Smoker Prevalence Coeff`),color="black",size=0.2) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = mean(model_df$CSMOKING_CrudePrev)) +
  labs(title =
"Estimated Coefficient Surface of Obesity")
```
# Discussion



{{< pagebreak >}}

# References {.unnumbered}

