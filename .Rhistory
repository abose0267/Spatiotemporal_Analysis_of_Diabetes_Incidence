library(tidyverse)
library(sf)
library(ggfortify)
set.seed(12345)
library(GWmodel)
vacdata_spatialpolys = US_Conus_VacSocial %>%
select(!GEOID:lat) %>% as_Spatial()
library(tidyverse)
library(sf)
library(ggfortify)
set.seed(12345)
#| fig-align: center
#| layout-valign: center
#| out-width: "100%"
#| out-height: "85%"
load("VacData.Rdata")
ggplot(US_Conus_VacSocial) +
geom_sf(aes(fill = perc_vac),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Percentage of population vaccinated for COVID-19",
fill = "%Vac")
#| fig-align: center
#| out-width: "100%"
vacdata_numeric = US_Conus_VacSocial %>%
select(lon:perc_HealthInsurance) %>% st_drop_geometry()
vacdata_lm = lm(perc_vac ~ ., data = vacdata_numeric)
US_Conus_VacSocial %>%
mutate("Predicted %Vac" = predict(vacdata_lm,
newdata = vacdata_numeric)) %>%
ggplot() +
geom_sf(aes(fill = `Predicted %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Predicted Values for %Vac by linear model")
autoplot(vacdata_lm,
colour = scales::alpha("black",
alpha = 0.3),
smooth.colour = "red") +
theme_bw() +
theme(text = element_text(size = 20))
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Abs Err" = abs(predict(vacdata_lm,
newdata = vacdata_numeric) -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_sf(aes(fill = `%Vac Abs Err`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(limits = c(0, 60),
breaks = c(10, 30, 50)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Absolute Prediction Error of %Vac by linear model")
vacdata_numeric_prop = vacdata_numeric %>%
mutate(vac_pop = ceiling((perc_vac/100)*population)) %>%
select(!perc_vac)
vacdata_glm = glm(cbind(vac_pop, population) ~ .,
data = vacdata_numeric_prop,
family = binomial)
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Predicted %Vac" = predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100) %>%
ggplot() +
geom_sf(aes(fill = `Predicted %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Predicted Values for %Vac by generalized linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Abs Err" = abs(predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100 -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_sf(aes(fill = `%Vac Abs Err`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(limits = c(0, 60),
breaks = c(10, 30, 50)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Absolute Prediction Error of %Vac by generalized linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Err" = (predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100 -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_histogram(aes(x = `%Vac Err`), bins = 20) +
theme_bw() +
theme(text = element_text(size = 20))
vacdata_fixed_cov = vacdata_numeric_prop %>%
mutate(across(population:perc_HealthInsurance,
~mean(.x))) %>%
select(!vac_pop)
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Spatial Effect on %Vac" = predict(vacdata_lm,
newdata = vacdata_fixed_cov)) %>%
ggplot() +
geom_sf(aes(fill = `Spatial Effect on %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Effect of spatial location on %Vac by \n linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Spatial Effect on %Vac" = predict(vacdata_glm,
newdata = vacdata_fixed_cov,
type = "response")*100) %>%
ggplot() +
geom_sf(aes(fill = `Spatial Effect on %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Effect of spatial location on %Vac by \ngeneralized linear model")
library(GWmodel)
vacdata_spatialpolys = US_Conus_VacSocial %>%
select(!GEOID:lat) %>% as_Spatial()
# First, need to find the bandwidth
vacdata_gwr_bw = bw.gwr(perc_vac ~ ., data = vacdata_spatialpolys,
kernel = "exponential")
# Bandwidth in hand, fit the model!
vacdata_gwr = gwr.basic(perc_vac ~ ., data = vacdata_spatialpolys,
bw = vacdata_gwr_bw, kernel = "exponential",
parallel.method = "omp")
library(tidyverse)
library(sf)
library(ggfortify)
set.seed(12345)
#| fig-align: center
#| layout-valign: center
#| out-width: "100%"
#| out-height: "85%"
load("VacData.Rdata")
ggplot(US_Conus_VacSocial) +
geom_sf(aes(fill = perc_vac),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Percentage of population vaccinated for COVID-19",
fill = "%Vac")
#| fig-align: center
#| out-width: "100%"
vacdata_numeric = US_Conus_VacSocial %>%
select(lon:perc_HealthInsurance) %>% st_drop_geometry()
vacdata_lm = lm(perc_vac ~ ., data = vacdata_numeric)
US_Conus_VacSocial %>%
mutate("Predicted %Vac" = predict(vacdata_lm,
newdata = vacdata_numeric)) %>%
ggplot() +
geom_sf(aes(fill = `Predicted %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Predicted Values for %Vac by linear model")
autoplot(vacdata_lm,
colour = scales::alpha("black",
alpha = 0.3),
smooth.colour = "red") +
theme_bw() +
theme(text = element_text(size = 20))
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Abs Err" = abs(predict(vacdata_lm,
newdata = vacdata_numeric) -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_sf(aes(fill = `%Vac Abs Err`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(limits = c(0, 60),
breaks = c(10, 30, 50)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Absolute Prediction Error of %Vac by linear model")
vacdata_numeric_prop = vacdata_numeric %>%
mutate(vac_pop = ceiling((perc_vac/100)*population)) %>%
select(!perc_vac)
vacdata_glm = glm(cbind(vac_pop, population) ~ .,
data = vacdata_numeric_prop,
family = binomial)
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Predicted %Vac" = predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100) %>%
ggplot() +
geom_sf(aes(fill = `Predicted %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Predicted Values for %Vac by generalized linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Abs Err" = abs(predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100 -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_sf(aes(fill = `%Vac Abs Err`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(limits = c(0, 60),
breaks = c(10, 30, 50)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Absolute Prediction Error of %Vac by generalized linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("%Vac Err" = (predict(vacdata_glm,
newdata = vacdata_numeric_prop,
type = "response")*100 -
vacdata_numeric$perc_vac)) %>%
ggplot() +
geom_histogram(aes(x = `%Vac Err`), bins = 20) +
theme_bw() +
theme(text = element_text(size = 20))
vacdata_fixed_cov = vacdata_numeric_prop %>%
mutate(across(population:perc_HealthInsurance,
~mean(.x))) %>%
select(!vac_pop)
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Spatial Effect on %Vac" = predict(vacdata_lm,
newdata = vacdata_fixed_cov)) %>%
ggplot() +
geom_sf(aes(fill = `Spatial Effect on %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Effect of spatial location on %Vac by \n linear model")
#| fig-align: center
#| out-width: "100%"
US_Conus_VacSocial %>%
mutate("Spatial Effect on %Vac" = predict(vacdata_glm,
newdata = vacdata_fixed_cov,
type = "response")*100) %>%
ggplot() +
geom_sf(aes(fill = `Spatial Effect on %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Effect of spatial location on %Vac by \ngeneralized linear model")
library(GWmodel)
vacdata_spatialpolys = US_Conus_VacSocial %>%
select(!GEOID:lat) %>% as_Spatial()
# First, need to find the bandwidth
vacdata_gwr_bw = bw.gwr(perc_vac ~ ., data = vacdata_spatialpolys,
kernel = "exponential")
# Bandwidth in hand, fit the model!
vacdata_gwr = gwr.basic(perc_vac ~ ., data = vacdata_spatialpolys,
bw = vacdata_gwr_bw, kernel = "exponential")
gwr_results_sf = vacdata_gwr$SDF %>% as("sf")
#| fig-align: center
#| out-width: "100%"
gwr_results_sf %>%
mutate("Predicted %Vac" = yhat) %>%
ggplot() +
geom_sf(aes(fill = `Predicted %Vac`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_gradientn(colours = terrain.colors(8),
limits = c(0, 100),
breaks = c(25, 50, 75)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Predicted Values for %Vac by GWR w/ exponential kernel")
#| fig-align: center
#| out-width: "100%"
gwr_results_sf %>%
mutate("%Vac Abs Err" = abs(yhat - y)) %>%
ggplot() +
geom_sf(aes(fill = `%Vac Abs Err`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(limits = c(0, 60),
breaks = c(10, 30, 50)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title = "Absolute Prediction Error of %Vac by GWR w/ \nexponential kernel")
#| fig-align: center
#| out-width: "100%"
gwr_results_sf %>%
mutate("%Health Insurance Coeff" = perc_HealthInsurance) %>%
ggplot() +
geom_sf(aes(fill = `%Health Insurance Coeff`),
color = scales::alpha("black",
alpha = 0.1)) +
scale_fill_viridis_c(breaks = c(-4, 0, 4)) +
theme(text = element_text(size = 20),
legend.position = "bottom") +
labs(title =
"Estimated Coefficient Surface of \n%Pop. having Health Insurance")
